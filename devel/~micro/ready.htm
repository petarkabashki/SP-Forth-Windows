<html>
<title>
Что есть уже сейчас.
</title>
<body text="#800080" bgcolor="#66ccff" vlink=#c000c0>
<font face="Times New Roman" size=4>
<h1>
<p align=center>
Что есть уже сейчас.
</p>
</h1>
То, что вы здесь видите - это не описание библиотек, а скорее описание моего
представления о том, какими они должны быть. Тут только идеи и ссылки на
их реализации. А сейчас немного о расположении библиотек. Они не спиханы
в кучу в каталог ~micro/lib/, а разбиты по темам. Библиотек пока мало, поэтому
смысл этого может быть не очень ясен. Поясняю. Это сделано для того, чтобы
каждый файл содержал необходимый минимум слов для определённой цели. Но
при этом число файлов должно увеличиться. Ну а то, что множество файлов лучше
хранить по каталогам, наверное каждому понятно. А если есть полная уверенность
в том, что все файлы из каталога должны быть загружены, а указывать их по
одному неохота (и это правильно!), то это можно реализовать. Просто пока не
было такой необходимости :)
<br><br>
Вам никогда не надоедало набивать в программе несколько раз одно и то же, ругая
тупой компьютер за то, что он не понимает очевидных вещей? "Конечно же нет" -
скажете вы - "есть же клавиши Ctrl-Ins, Shift-Ins, Ctrl-C, Ctrl-V, которые
позволяют этого избежать, и тот, кто этого не знает - ламер!". Так появляются
программы, состоящие из множества похожих кусков текста. А как потом разбираться в
таких произведениях? Рассматривать две строки, пытаясь найти чем они отличаются
друг от друга? Нет, можете со мной спорить, но в текстовом редакторе для
фортеров не должно быть функций Cut/Copy! Ну, то есть пусть будут, но не
следует ими злоупотреблять. Тем более, что форт это позволяет. Как описать
константы на С? Есть только один способ:
<pre>#define ONE 1
#define TWO 2
#define TEN 10
</pre>
Именно так, и никак иначе. Привыкнув к такой форме записи многие считают, что
на форте это делается так:
<pre>1 CONSTANT ONE
2 CONSTANT TWO
10 CONSTANT TEN
</pre>
Нет! Единственное, что сказано о слове CONSTANT, так это то, что оно получает
со стека число и токен из входного потока, и создаёт константу. То есть с
помощью CONSTANT <i>можно</i> но <i>не обязательно</i> описывать константу.
И использовать это слово нужно только там, где оно нужно. Для описания группы
констант нужно что-нибудь другое. Ведь для этого надо только указать начало и
конец группы; для каждой константы - имя и значение. Значит создаём свой
синтаксис. Например такой:
<pre>CONST
  ONE 1
  TWO 2
  TEN 10
;</pre>
Идея есть, осталось только реализовать. Но это не проблема. Реализация <a href="wwwlib%5Cconst%5Cindex.htm#const">здесь</a>.
В-общем дело тут не в описании констант, а в стиле программирования на форте.
Я постараюсь придерживаться описанного стиля во всех своих программах.<br>
А что касается описания слова #define для того, чтобы без почти изменений
загружать сишные хедеры, так по-моему это тоже чисто по-фортовски.
<br><br>
Первое, за что я взялся на SPF была строка ввода с историей, аналог досовского
doskey-а. Слишком уж без неё (истории) неудобно. Проблема тут оказалась в
обработке событий консоли - сложно получить код клавиши в приемлимом виде.
Результат можно увидеть <a href="wwwlib%5Ckey%5Cindex.htm">здесь.</a>
<br><br>
На этом пока всё. Но список будет пополняться.
<br><br><br><br>
Предложения, пожелания и дополнения шлите мне <a href="mailto:micro@forth.org.ru">Dmitry Zyryanov (Micro)</a>
</font>
</body>
</html>